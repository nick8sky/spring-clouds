spring.application.name=eureka-config-client
server.port=8002

spring.cloud.config.label=master
spring.cloud.config.profile=dev

#对应的git文件eureka-config-client-dev.properties
#项目名称+${profile}.properties
#http://localhost:8001/client-a/dev  client-a-dev.properties

eureka.client.serviceUrl.defaultZone=http://localhost:8000/eureka/
#eureka服务注册地址
spring.cloud.config.discovery.enabled=true
#从配置中心读取文件
spring.cloud.config.discovery.serviceId=eureka-config-server
#配置中心的servieId，即服务名
#spring.cloud.config.uri=http://localhost:8001/


#spring.application.name：对应{application}部分
#spring.cloud.config.profile：对应{profile}部分
#spring.cloud.config.label：对应git的分支。如果配置中心使用的是本地存储，则该参数无用
#spring.cloud.config.uri：配置中心的具体地址，也可为配置中心的项目名称或http://localhost:8001/
#spring.cloud.config.discovery.service-id：指定配置中心的service-id，便于扩展为高可用配置集群。
#这些与spring-cloud相关的属性必须配置在bootstrap.properties中，config部分内容才能被正确加载。
#因为config的相关配置会先于application.properties，而bootstrap.properties的加载也是先于application.properties。


## 刷新时，关闭安全验证
management.security.enabled=false
## 开启消息跟踪
spring.cloud.bus.trace.enabled=true

spring.rabbitmq.host=192.168.1.101
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest